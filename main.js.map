{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/covid-data/covid-data.component.ts","./src/app/covid-data/covid-data.component.html","./src/app/covid-data/livecoviddata.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'SISCovidTracker';\n}\n","<nav  class=\"navbar navbar-expand-lg navbar-dark bg-dark\">  \n    <a class=\"navbar-brand\" href=\"#\">Covid Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Features</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Pricing</a>\n        </li>\n       \n      </ul>\n    </div>\n  </nav>\n<div  class=\"container-fluid\">\n  <app-covid-data></app-covid-data>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { CovidDataComponent } from './covid-data/covid-data.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LivecoviddataService } from './covid-data/livecoviddata.service'\nimport {  MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CovidDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [LivecoviddataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LivecoviddataService } from './livecoviddata.service';\nimport { Covid19 } from '../Models/covid19';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-covid-data',\n  templateUrl: './covid-data.component.html',\n  styleUrls: ['./covid-data.component.scss']\n})\nexport class CovidDataComponent implements OnInit {\n  ELEMENT_DATA: Covid19[];\n  displayedColumns: string[] = ['country', 'cases', 'todayCases', 'deaths', 'todayDeaths', 'recovered', 'active', 'critical', 'tests', 'population'];\n  dataSource = new MatTableDataSource<Covid19>(this.ELEMENT_DATA);\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  constructor(private covidservice: LivecoviddataService) { }\n\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.getCovidcases();\n  }\n\n  getCovidcases() {\n    this.covidservice.GetCovidData().subscribe(res => this.dataSource.data = res);\n  }\n\n  applyFilter(filtervalue : string){\n    this.dataSource.filter = filtervalue.trim().toLowerCase();\n  }\n\n}\n\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n// const ELEMENT_DATA: PeriodicElement[] = [\n//   {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n//   {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n//   {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n//   {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n//   {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n//   {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n//   {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n//   {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n//   {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n//   {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n// ];\n","<mat-form-field class=\"example-full-width\"> \n  <mat-label>Search</mat-label>\n  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Ex. Inida\" value=\"\">\n</mat-form-field>\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"country\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Country. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.country}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"cases\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cases </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.cases}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"todayCases\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Today Cases </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.todayCases}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"deaths\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Deaths </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.deaths}} </td>\n  </ng-container>\n\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"todayDeaths\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Today Deaths </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.todayDeaths}} </td>\n  </ng-container>\n\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"recovered\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Recovered </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.recovered}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"active\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Active </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"critical\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Critical </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.critical}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"tests\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Tests </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.tests}} </td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"population\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Population </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.population}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 15, 20]\" showFirstLastButtons></mat-paginator>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Covid19 } from '../Models/covid19';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LivecoviddataService {\n\n  constructor(private http: HttpClient) { }\n\n  public GetCovidData(): Observable<Covid19[]> {\n    return this.http.get<Covid19[]>('https://disease.sh/v3/covid-19/countries');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}